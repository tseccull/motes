name: Motes CI/CD

on:
  push:
    branches:
      - main
      - feature/package-and-cicd #TODO remove this before merge
  # pull_request:
  #   branches:
  #     - main
  #     - feature/package-and-cicd #TODO remove this before merge

jobs:
  build:
    name: Miniconda CI on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: motes
          environment-file: conda/motes.yml
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false
      - name: Linting check with flake8
        shell: bash -l {0}
        run: |
          python -m flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
          python -m flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      # TODO: Do not fail the build if there are errors - just return the score.
      - name: Static code analysis with pylint
        shell: bash -l {0}
        run: |
          python -m pylint src || exit 0
      - name: Vulnerability checks with Bandit
        shell: bash -l {0}
        run: |
          python -m bandit -r src
      - name: Formatting check with Black
        shell: bash -l {0}
        run: |
          python -m black --check src 
      # TODO Unit tests with pytests and coverage?

  # deploy:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up Python 3.9
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.9
  #     - name: Publish package
  #       uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
  #       with:
  #         user: __token__
  #         password: ${{ secrets.PYPI_API_TOKEN }}
